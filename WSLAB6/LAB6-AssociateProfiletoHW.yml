---
- name: LAB6 Associate Profiles to HW
  hosts: serverprofile_esx
  connection: local
  gather_facts: false
  vars:
    hw1: "{{ hw | default('')}}"
    deployprofile1: "{{ deployprofile | default(False) }}"
    intersight_api_login_info: &intersight_api_login_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ intersight_validate_certs | default(omit) }}"

  tasks:
    - name: Lookup per Profile which HW to Associate and proceed
      when:
        - hw1 | length
      block:
        - name: Output action being done
          ansible.builtin.debug:
            msg: "For {{ inventory_hostname }} we have {{ hw1 }}. Deploy is {{ deployprofile1 }}"
            # This HW has Moid {{ hostvars[hw1]['server_moid'] }}.  "

        - name: Get MOID of Server Profile
          cisco.intersight.intersight_rest_api:
            <<: *intersight_api_login_info
            resource_path: /server/Profiles
            query_params:
              $filter: "Name eq '{{ inventory_hostname }}'"
          register: serverprofile
          delegate_to: local_host

        - name: Moid for serverprofile
          ansible.builtin.set_fact:
            sprofile_moid: "{{ serverprofile.api_response.Moid }}"

        - name: Get MOID of HW
          cisco.intersight.intersight_rest_api:
            <<: *intersight_api_login_info
            resource_path: /view/Servers
            query_params:
              $filter: "Name eq '{{ hw1 }}'"
          register: hwinfo
          delegate_to: local_host

        - name: HW Response
          ansible.builtin.debug:
            msg:
              - "For {{ inventory_hostname }} with {{ sprofile_moid }} we have {{ hw1 }}."
              - "This HW has {{ hwinfo.api_response.Moid }} and {{ hwinfo.api_response.ObjectType }}"

        - name: Moid and ObjectType for hw
          ansible.builtin.set_fact:
            hw_moid: "{{ hwinfo.api_response.Moid }}"
            hw_objtype: "{{ hwinfo.api_response.ObjectType }}"

        - name: Assign HW Moid to Server
          cisco.intersight.intersight_rest_api:
            <<: *intersight_api_login_info
            resource_path: /server/Profiles/{{ sprofile_moid }}
            api_body: {
              "AssignedServer": {
                "Moid": "{{ hw_moid }}",
                "ObjectType": "{{ hw_objtype }}",
                "ServerAssignmentMode": "Static",
                "ServerPool": null,
                "ServerPreAssignBySerial": "",
                "ServerPreAssignBySlot": null
              }
            }
            state: present
        # then deploy
        - name: Deploy Server Profile
          cisco.intersight.intersight_rest_api:
            <<: *intersight_api_login_info
            resource_path: /server/Profiles/{{ sprofile_moid }}
            api_body: {
              "ScheduledActions": [
                {
                  "Action":"Deploy",
                  "ProceedOnReboot":false
                },
                {
                  "Action":"Activate",
                  "ProceedOnReboot":true
                }
              ]
            }
            state: present
          register: result_deploy
          when: deployprofile1 is true

        - name: Deploy result
          cisco.intersight.intersight_rest_api:
            <<: *intersight_api_login_info
            resource_path: /server/Profiles
            query_params:
              $filter: "Moid eq '{{ sprofile_moid }}'"
              $select: "ConfigContext"
          register: status
          until: status.api_response.ConfigContext.ConfigState != 'Validating' and status.api_response.ConfigContext.ConfigState != 'Activating'
          retries: 30
          delay: 60
          ignore_errors: true
          when: deployprofile1 is true

        - name: Print final workflow status
          ansible.builtin.assert:
            that:
              - ( status.api_response.ConfigContext.ConfigState == 'OK' ) or ( status.api_response.ConfigContext.ConfigState == 'Associated' )
            fail_msg: "Final workflow status for {{ inventory_hostname }}: {{ status.api_response.ConfigContext.ConfigState }}. Check intersight tasks."
            success_msg: "Profile {{ inventory_hostname }} successfully deployed into {{ hw1 }}"
          when: deployprofile1 == true

      rescue:
        - name: Error detected
          ansible.builtin.debug:
            msg:
              - "There was an error in processing {{ inventory_hostname }}."
              - "Please check Error below, Inventory HW assignment or Intersight connection."
              - "Task {{ ansible_failed_task.name }} failed with {{ ansible_failed_result }}."
