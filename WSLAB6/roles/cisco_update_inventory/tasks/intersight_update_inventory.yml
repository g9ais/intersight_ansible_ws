---

# -------------------------------------------------------------------------------------
#  Dynamic update the Ansible inventory with a list of Cisco UCS servers in the cluster.
#  Servers were discovered by Intersight when UCS FIs were claimed as targets in Intersight.
# -------------------------------------------------------------------------------------

- name: Define anchor for Intersight API login info
  ansible.builtin.set_fact:
    intersight_api_login_info: &intersight_api_login_info
      api_private_key: "{{ intersight_api_private_key }}"
      api_key_id: "{{ intersight_api_key_id }}"
      api_uri: "{{ intersight_api_uri | default(omit) }}"
      validate_certs: "{{ intersight_validate_certs | default(omit) }}"
      state: "{{ intersight_state | default(omit) }}"

    # Change filepath if you want to update a different inventory file
    filepath: "{{ inventory_file }}"
    # Change host_group if you want to use another group name for your servers in the created inventory
    host_group: blades

- name: Update Ansible inventory file with list of UCS servers
  block:
    - name: Find all servers
      cisco.intersight.intersight_info:
        <<: *intersight_api_login_info
        server_names: 
      register: all_results
      tags: intersight_dynamic_inventory_update

    - name: Print list of UCS servers
      ansible.builtin.debug:
        msg: "server name {{ item.Name }}, moid {{ item.Moid }}"
      loop: "{{ all_results.intersight_servers }}"
      when: all_results.intersight_servers is defined
      loop_control:
        label: "{{item.Name}}"
      tags: always
      # tags: [never, debug, always, intersight_dynamic_inventory_update]

    - name: Place the servers in a group in the file
      ansible.builtin.debug:
        msg: Inventory filepath "{{ filepath }}"
      tags: always
    #   # tags: [never, debug, always, intersight_dynamic_inventory_update]

    - name: Add servers to the file under a group
      ansible.builtin.blockinfile:
        path: "{{ filepath }}"
        insertafter: '^(\s)+placeholderblade:'
        marker: "# {mark}"
        marker_begin: "{{ item.Name }}"
        marker_end: "/\ {{ item.Name }}"
        block: |
          {% filter indent(width=8, first=true) %}
          {{ item.Name }}: 
            serial: {{ item.Serial }}
            server_moid: {{ item.Moid }}
            model: {{ item.Model }}
          {% endfilter %}
        create: true
      loop: "{{ all_results.intersight_servers }}"
      loop_control:
       label: "{{ item.Name }}"
      when: all_results.intersight_servers is defined

  delegate_to: localhost
  run_once: true

# -----------------------------------------------------------------------------------------
